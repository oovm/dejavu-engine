grammar Dejavu {
file: '*.djv'
}

entry class Root {
    Element*
}


union Element {
    | TextElements #Text
    | TemplateIf #TemplateIf
}
// === text area === ---------------------------------------------------------------------------------------------------
atomic class TemplateIf {
    IfBegin TextElements* IfEnd
}
class IfBegin {
    TEMPLATE_L KW_END KW_IF? TEMPLATE_R
}
class IfElse {
    TEMPLATE_L KW_END KW_IF? TEMPLATE_R
}
class IfElseIf {
    TEMPLATE_L KW_END KW_IF? TEMPLATE_R
}
class IfEnd {
    TEMPLATE_L KW_END KW_IF? TEMPLATE_R
}

class KW_END {
    'end'
}
class KW_IF {
    'if'
}

// === text area === ---------------------------------------------------------------------------------------------------
@style(operator)
atomic class TEMPLATE_L {
    '<%'
}
atomic class TEMPLATE_R {
    '%>'
}



// === text area === ---------------------------------------------------------------------------------------------------
union TextElements {
    | TEMPLATE_E #Escape
    | TEXT_SPACE #TextSpace
    | TEXT_WORD  #TextWord
}

@style(escape)
class TEMPLATE_E {
    '<<%'
}

class TEXT_SPACE {
    /\p{White_Space}+/
}
class TEXT_WORD {
    /[^<\p{White_Space}]+/
}

// === ignores === -----------------------------------------------------------------------------------------------------
ignore class WhiteSpace {
    /\p{White_Space}+/
}

//@style(comment)
//ignore union Comment {
//    | @comment_line('//')
//    | @comment_line('#')
//    | @comment_block('/*', '*/', nest: false)
//}

