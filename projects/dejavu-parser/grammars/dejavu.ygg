grammar Dejavu {
file: '*.djv'
}

entry class Root {
    Element*
}


union Element {
    | TextElements #Text
    | TemplateIf #TemplateIf
}
// === text area === ---------------------------------------------------------------------------------------------------
union TextElements {
    | TEMPLATE_E #Escape
    | TEXT_SPACE #TextSpace
    | TEXT_WORD  #TextWord
}

@style(escape)
class TEMPLATE_E {
    '<<%'
}

class TEXT_SPACE {
    /\p{White_Space}+/
}
class TEXT_WORD {
    /[^<\p{White_Space}]+/
}
// === template token === ----------------------------------------------------------------------------------------------
@style(operator)
atomic class TEMPLATE_L {
    '<%' SPACE_CONTROL
}
atomic class TEMPLATE_R {
    SPACE_CONTROL '%>'
}
union SPACE_CONTROL {
    | '_'
    | '-'
    | '~'
    | '='
}
// === template if === -------------------------------------------------------------------------------------------------
atomic class TemplateIf {
    IfBegin TextElements* IfEnd
}
class IfBegin {
    TEMPLATE_L KW_IF Atomic TEMPLATE_R
}
class IfElse {
    TEMPLATE_L KW_ELSE TEMPLATE_R
}
class IfElseIf {
    TEMPLATE_L KW_ELSE KW_IF TEMPLATE_R
}
class IfEnd {
    TEMPLATE_L KW_END KW_IF? TEMPLATE_R
}
class KW_IF {
    'if'
}
class KW_ELSE {
    'else'
}
@style(keyword)
token {
    KW_IF: 'if'
    KW_ELSE: 'else'
}
// === text area === ---------------------------------------------------------------------------------------------------
class KW_END {
    'end'
}
// === string === ------------------------------------------------------------------------------------------------------
union Atomic {
    | Boolean
    | Identifier
    | Number
}
// === string === ------------------------------------------------------------------------------------------------------

// === number === ------------------------------------------------------------------------------------------------------
class Number {
    /0|[1-9][0-9]/
}
// === identifier === --------------------------------------------------------------------------------------------------
class Identifier {
    /[_\p{XID_start}][\p{XID_continue}]*/
}
union Boolean {
    | 'true'  #True
    | 'false' #False
}
// === ignores === -----------------------------------------------------------------------------------------------------
ignore class WhiteSpace {
    /\p{White_Space}+/
}

//@style(comment)
//ignore union Comment {
//    | @comment_line('//')
//    | @comment_line('#')
//    | @comment_block('/*', '*/', nest: false)
//}

