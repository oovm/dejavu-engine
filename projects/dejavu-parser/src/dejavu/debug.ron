GrammarInfo {
    url: None,
    name: Identifier("Dejavu", 8..14),
    extensions: [],
    imports: {},
    exports: [],
    rules: {
        "Root": GrammarRule {
            name: Identifier("Root", 33..37),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: true,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: UnaryExpression {
                        base: Expression {
                            tag: None,
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: IGNORED,
                                    },
                                    Expression {
                                        tag: Identifier("Element", 44..51),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Element", 44..51),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                ],
                            },
                        },
                        operators: [
                            RepeatsBetween {
                                min: 0,
                                max: 4294967295,
                            },
                        ],
                    },
                },
            },
            range: 21..54,
        },
        "Element": GrammarRule {
            name: Identifier("Element", 62..69),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Text", 94..98),
                        ),
                        branch: Expression {
                            tag: Identifier("Text", 94..98),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("TextMany", 78..86),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Export", 121..127),
                        ),
                        branch: Expression {
                            tag: Identifier("Export", 121..127),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("TemplateExport", 105..119),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("If", 150..152),
                        ),
                        branch: Expression {
                            tag: Identifier("If", 150..152),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("TemplateIf", 134..144),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("For", 175..178),
                        ),
                        branch: Expression {
                            tag: Identifier("For", 175..178),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("TemplateFor", 159..170),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 56..180,
        },
        "TextMany": GrammarRule {
            name: Identifier("TextMany", 315..323),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: UnaryExpression {
                        base: Expression {
                            tag: Identifier("TextElement", 330..341),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("TextElement", 330..341),
                                boxed: false,
                                inline: false,
                            },
                        },
                        operators: [
                            RepeatsBetween {
                                min: 1,
                                max: 4294967295,
                            },
                        ],
                    },
                },
            },
            range: 302..344,
        },
        "TextElement": GrammarRule {
            name: Identifier("TextElement", 351..362),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Escape", 384..390),
                        ),
                        branch: Expression {
                            tag: Identifier("Escape", 384..390),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("TEMPLATE_E", 372..382),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("TextSpace", 409..418),
                        ),
                        branch: Expression {
                            tag: Identifier("TextSpace", 409..418),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("TEXT_SPACE", 397..407),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("TextWord", 437..445),
                        ),
                        branch: Expression {
                            tag: Identifier("TextWord", 437..445),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("TEXT_WORD", 425..434),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 345..447,
        },
        "TEMPLATE_E": GrammarRule {
            name: Identifier("TEMPLATE_E", 470..480),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "<%!",
                        insensitive: false,
                        range: 488..491,
                    },
                },
            },
            range: 449..494,
        },
        "TEXT_SPACE": GrammarRule {
            name: Identifier("TEXT_SPACE", 513..523),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: true,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "\\p{White_Space}+",
                        span: 525..543,
                    },
                },
            },
            range: 513..543,
        },
        "TEXT_WORD": GrammarRule {
            name: Identifier("TEXT_WORD", 548..557),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: true,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[^<\\p{White_Space}]+",
                        span: 560..582,
                    },
                },
            },
            range: 548..582,
        },
        "TEMPLATE_L": GrammarRule {
            name: Identifier("TEMPLATE_L", 736..746),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "<%",
                                    insensitive: false,
                                    range: 768..770,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("SpaceControl", 772..784),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("SpaceControl", 772..784),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 1,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 706..787,
        },
        "TEMPLATE_R": GrammarRule {
            name: Identifier("TEMPLATE_R", 801..811),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("SpaceControl", 818..830),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("SpaceControl", 818..830),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 1,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "%>",
                                    insensitive: false,
                                    range: 833..835,
                                },
                            },
                        ],
                    },
                },
            },
            range: 788..838,
        },
        "SpaceControl": GrammarRule {
            name: Identifier("SpaceControl", 845..857),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Nothing", 871..878),
                        ),
                        branch: Expression {
                            tag: Identifier("Nothing", 871..878),
                            remark: false,
                            body: YggdrasilText {
                                text: "=",
                                insensitive: false,
                                range: 867..868,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Break0", 890..896),
                        ),
                        branch: Expression {
                            tag: Identifier("Break0", 890..896),
                            remark: false,
                            body: YggdrasilText {
                                text: "~",
                                insensitive: false,
                                range: 886..887,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Break1", 908..914),
                        ),
                        branch: Expression {
                            tag: Identifier("Break1", 908..914),
                            remark: false,
                            body: YggdrasilText {
                                text: "-",
                                insensitive: false,
                                range: 904..905,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Delete0", 926..933),
                        ),
                        branch: Expression {
                            tag: Identifier("Delete0", 926..933),
                            remark: false,
                            body: YggdrasilText {
                                text: "_",
                                insensitive: false,
                                range: 922..923,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Delete1", 945..952),
                        ),
                        branch: Expression {
                            tag: Identifier("Delete1", 945..952),
                            remark: false,
                            body: YggdrasilText {
                                text: ".",
                                insensitive: false,
                                range: 941..942,
                            },
                        },
                    },
                ],
            },
            range: 839..954,
        },
        "KW_END": GrammarRule {
            name: Identifier("KW_END", 983..989),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "end",
                        insensitive: false,
                        range: 992..995,
                    },
                },
            },
            range: 983..996,
        },
        "TemplateExport": GrammarRule {
            name: Identifier("TemplateExport", 1130..1144),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_L", 1153..1163),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("exports", 1164..1171),
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("ExportItem", 1172..1182),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_R", 1184..1194),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 1124..1196,
        },
        "ExportItem": GrammarRule {
            name: Identifier("ExportItem", 1203..1213),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_EXPORT", 1222..1231),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("name", 1232..1236),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 1237..1247),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("KW_TO", 1253..1258),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("language", 1259..1267),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("Identifier", 1268..1278),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 1,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("KW_BY", 1286..1291),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: IGNORED,
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("KW_CLASS", 1292..1300),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("class", 1301..1306),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("NamepathFree", 1308..1320),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 1,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("KW_BY", 1328..1333),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: IGNORED,
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("KW_TRAIT", 1334..1342),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("trait", 1343..1348),
                                                    remark: false,
                                                    body: UnaryExpression {
                                                        base: Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: RuleReference {
                                                                name: Identifier("NamepathFree", 1349..1361),
                                                                boxed: false,
                                                                inline: false,
                                                            },
                                                        },
                                                        operators: [
                                                            RepeatsBetween {
                                                                min: 0,
                                                                max: 1,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 1,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 1197..1366,
        },
        "KW_EXPORT": GrammarRule {
            name: Identifier("KW_EXPORT", 1395..1404),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "export",
                        insensitive: false,
                        range: 1407..1413,
                    },
                },
            },
            range: 1395..1414,
        },
        "KW_CLASS": GrammarRule {
            name: Identifier("KW_CLASS", 1419..1427),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "class",
                        insensitive: false,
                        range: 1430..1435,
                    },
                },
            },
            range: 1419..1436,
        },
        "KW_TRAIT": GrammarRule {
            name: Identifier("KW_TRAIT", 1441..1449),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "trait",
                        insensitive: false,
                        range: 1452..1457,
                    },
                },
            },
            range: 1441..1458,
        },
        "KW_TO": GrammarRule {
            name: Identifier("KW_TO", 1463..1468),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "to",
                        insensitive: false,
                        range: 1471..1473,
                    },
                },
            },
            range: 1463..1474,
        },
        "KW_BY": GrammarRule {
            name: Identifier("KW_BY", 1479..1484),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "by",
                        insensitive: false,
                        range: 1487..1489,
                    },
                },
            },
            range: 1479..1490,
        },
        "TemplateIf": GrammarRule {
            name: Identifier("TemplateIf", 1627..1637),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("IfBegin", 1644..1651),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("IfBegin", 1644..1651),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("IfElseIf", 1652..1660),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("IfElseIf", 1652..1660),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("IfElse", 1662..1668),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("IfElse", 1662..1668),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 1,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("IfEnd", 1670..1675),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("IfEnd", 1670..1675),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 1614..1677,
        },
        "IfBegin": GrammarRule {
            name: Identifier("IfBegin", 1691..1698),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("TEMPLATE_L", 1705..1715),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_L", 1705..1715),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_IF", 1719..1724),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("Expression", 1727..1737),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Expression", 1727..1737),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("TEMPLATE_R", 1740..1750),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_R", 1740..1750),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("Element", 1751..1758),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Element", 1751..1758),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 1678..1761,
        },
        "IfElse": GrammarRule {
            name: Identifier("IfElse", 1775..1781),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("TEMPLATE_L", 1788..1798),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_L", 1788..1798),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_ELSE", 1802..1809),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("TEMPLATE_R", 1812..1822),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_R", 1812..1822),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("Element", 1823..1830),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Element", 1823..1830),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 1762..1833,
        },
        "IfElseIf": GrammarRule {
            name: Identifier("IfElseIf", 1847..1855),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("TEMPLATE_L", 1862..1872),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_L", 1862..1872),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_ELSE", 1876..1883),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_IF", 1887..1892),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("Expression", 1895..1905),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Expression", 1895..1905),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("TEMPLATE_R", 1908..1918),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_R", 1908..1918),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("Element", 1919..1926),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Element", 1919..1926),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 1834..1929,
        },
        "IfEnd": GrammarRule {
            name: Identifier("IfEnd", 1943..1948),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("TEMPLATE_L", 1955..1965),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_L", 1955..1965),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_END", 1969..1975),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("KW_IF", 1979..1984),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 1,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("TEMPLATE_R", 1988..1998),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_R", 1988..1998),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 1930..2000,
        },
        "KW_IF": GrammarRule {
            name: Identifier("KW_IF", 2029..2034),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "if",
                        insensitive: false,
                        range: 2037..2039,
                    },
                },
            },
            range: 2029..2040,
        },
        "KW_ELSE": GrammarRule {
            name: Identifier("KW_ELSE", 2045..2052),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "else",
                        insensitive: false,
                        range: 2055..2059,
                    },
                },
            },
            range: 2045..2060,
        },
        "TemplateFor": GrammarRule {
            name: Identifier("TemplateFor", 2197..2208),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("ForBegin", 2215..2223),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("ForBegin", 2215..2223),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("ForElse", 2224..2231),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("ForElse", 2224..2231),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 1,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("ForEnd", 2233..2239),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("ForEnd", 2233..2239),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 2184..2241,
        },
        "ForBegin": GrammarRule {
            name: Identifier("ForBegin", 2255..2263),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("TEMPLATE_L", 2270..2280),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_L", 2270..2280),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_FOR", 2284..2290),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("Expression", 2293..2303),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Expression", 2293..2303),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("TEMPLATE_R", 2306..2316),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_R", 2306..2316),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("Element", 2317..2324),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Element", 2317..2324),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 2242..2327,
        },
        "ForElse": GrammarRule {
            name: Identifier("ForElse", 2341..2348),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("TEMPLATE_L", 2355..2365),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_L", 2355..2365),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_ELSE", 2369..2376),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("TEMPLATE_R", 2379..2389),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_R", 2379..2389),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("Element", 2390..2397),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Element", 2390..2397),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 2328..2400,
        },
        "ForEnd": GrammarRule {
            name: Identifier("ForEnd", 2414..2420),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("TEMPLATE_L", 2427..2437),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_L", 2427..2437),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_END", 2441..2447),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("KW_FOR", 2451..2457),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 1,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("TEMPLATE_R", 2461..2471),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_R", 2461..2471),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 2401..2473,
        },
        "KW_FOR": GrammarRule {
            name: Identifier("KW_FOR", 2502..2508),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "for",
                        insensitive: false,
                        range: 2511..2514,
                    },
                },
            },
            range: 2502..2515,
        },
        "Expression": GrammarRule {
            name: Identifier("Expression", 2645..2655),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("Term", 2662..2666),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Term", 2662..2666),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("ExpressionRest", 2667..2681),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("ExpressionRest", 2667..2681),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 2639..2684,
        },
        "ExpressionRest": GrammarRule {
            name: Identifier("ExpressionRest", 2691..2705),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("Infix", 2712..2717),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Infix", 2712..2717),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("Term", 2718..2722),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Term", 2718..2722),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 2685..2724,
        },
        "Infix": GrammarRule {
            name: Identifier("Infix", 2731..2736),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Add", 2750..2753),
                        ),
                        branch: Expression {
                            tag: Identifier("Add", 2750..2753),
                            remark: false,
                            body: YggdrasilText {
                                text: "+",
                                insensitive: false,
                                range: 2746..2747,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Mul", 2765..2768),
                        ),
                        branch: Expression {
                            tag: Identifier("Mul", 2765..2768),
                            remark: false,
                            body: YggdrasilText {
                                text: "-",
                                insensitive: false,
                                range: 2761..2762,
                            },
                        },
                    },
                ],
            },
            range: 2725..2770,
        },
        "Term": GrammarRule {
            name: Identifier("Term", 2777..2781),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("Prefix", 2788..2794),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("Prefix", 2788..2794),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("Atomic", 2796..2802),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Atomic", 2796..2802),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("Suffix", 2803..2809),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("Suffix", 2803..2809),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 2771..2812,
        },
        "Prefix": GrammarRule {
            name: Identifier("Prefix", 2819..2825),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Not", 2839..2842),
                        ),
                        branch: Expression {
                            tag: Identifier("Not", 2839..2842),
                            remark: false,
                            body: YggdrasilText {
                                text: "!",
                                insensitive: false,
                                range: 2835..2836,
                            },
                        },
                    },
                ],
            },
            range: 2813..2844,
        },
        "Suffix": GrammarRule {
            name: Identifier("Suffix", 2851..2857),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Null", 2871..2875),
                        ),
                        branch: Expression {
                            tag: Identifier("Null", 2871..2875),
                            remark: false,
                            body: YggdrasilText {
                                text: "?",
                                insensitive: false,
                                range: 2867..2868,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DotCall", 2898..2905),
                        ),
                        branch: Expression {
                            tag: Identifier("DotCall", 2898..2905),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: ".",
                                            insensitive: false,
                                            range: 2883..2884,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: IGNORED,
                                    },
                                    Expression {
                                        tag: Identifier("Identifier", 2886..2896),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Identifier", 2886..2896),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                ],
            },
            range: 2845..2907,
        },
        "Atomic": GrammarRule {
            name: Identifier("Atomic", 3035..3041),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Boolean", 3114..3121),
                        ),
                        branch: Expression {
                            tag: Identifier("Boolean", 3114..3121),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Boolean", 3088..3095),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Identifier", 3154..3164),
                        ),
                        branch: Expression {
                            tag: Identifier("Identifier", 3154..3164),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Identifier", 3128..3138),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Number", 3197..3203),
                        ),
                        branch: Expression {
                            tag: Identifier("Number", 3197..3203),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Number", 3171..3177),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 3029..3205,
        },
        "String": GrammarRule {
            name: Identifier("String", 3333..3339),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DoubleQuote", 3357..3368),
                        ),
                        branch: Expression {
                            tag: Identifier("DoubleQuote", 3357..3368),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "'",
                                            insensitive: false,
                                            range: 3349..3350,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: IGNORED,
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "'",
                                            insensitive: false,
                                            range: 3353..3354,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("SingleQuote", 3384..3395),
                        ),
                        branch: Expression {
                            tag: Identifier("SingleQuote", 3384..3395),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "\"",
                                            insensitive: false,
                                            range: 3376..3377,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: IGNORED,
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "\"",
                                            insensitive: false,
                                            range: 3380..3381,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                ],
            },
            range: 3327..3397,
        },
        "Number": GrammarRule {
            name: Identifier("Number", 3532..3538),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Dec", 3559..3562),
                        ),
                        branch: Expression {
                            tag: Identifier("Dec", 3559..3562),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Digits", 3547..3553),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Bin", 3581..3584),
                        ),
                        branch: Expression {
                            tag: Identifier("Bin", 3581..3584),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilRegex {
                                            raw: "0b",
                                            span: 3569..3573,
                                        },
                                    },
                                    Expression {
                                        tag: Identifier("BIN", 3574..3577),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("BIN", 3574..3577),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Oct", 3603..3606),
                        ),
                        branch: Expression {
                            tag: Identifier("Oct", 3603..3606),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilRegex {
                                            raw: "0o",
                                            span: 3591..3595,
                                        },
                                    },
                                    Expression {
                                        tag: Identifier("OCT", 3596..3599),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("OCT", 3596..3599),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Hex", 3625..3628),
                        ),
                        branch: Expression {
                            tag: Identifier("Hex", 3625..3628),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilRegex {
                                            raw: "0x",
                                            span: 3613..3617,
                                        },
                                    },
                                    Expression {
                                        tag: Identifier("HEX", 3618..3621),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("HEX", 3618..3621),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                ],
            },
            range: 3519..3630,
        },
        "Digits": GrammarRule {
            name: Identifier("Digits", 3642..3648),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: true,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "(0|[1-9][0-9])(.[0-9]+)?",
                        span: 3655..3681,
                    },
                },
            },
            range: 3631..3683,
        },
        "Unit": GrammarRule {
            name: Identifier("Unit", 3690..3694),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: Identifier("Identifier", 3701..3711),
                    remark: false,
                    body: RuleReference {
                        name: Identifier("Identifier", 3701..3711),
                        boxed: false,
                        inline: false,
                    },
                },
            },
            range: 3684..3713,
        },
        "BIN": GrammarRule {
            name: Identifier("BIN", 3726..3729),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[0-1]+",
                        span: 3731..3739,
                    },
                },
            },
            range: 3726..3739,
        },
        "OCT": GrammarRule {
            name: Identifier("OCT", 3744..3747),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[0-7]+",
                        span: 3749..3757,
                    },
                },
            },
            range: 3744..3757,
        },
        "HEX": GrammarRule {
            name: Identifier("HEX", 3762..3765),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[0-9a-fA-F]+",
                        span: 3767..3781,
                    },
                },
            },
            range: 3762..3781,
        },
        "NamepathFree": GrammarRule {
            name: Identifier("NamepathFree", 3911..3923),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("Identifier", 3942..3952),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 3942..3952),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: ChoiceExpression {
                                                                    branches: [
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: YggdrasilText {
                                                                                text: ".",
                                                                                insensitive: false,
                                                                                range: 3956..3957,
                                                                            },
                                                                        },
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: YggdrasilText {
                                                                                text: "::",
                                                                                insensitive: false,
                                                                                range: 3962..3964,
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: IGNORED,
                                                            },
                                                            Expression {
                                                                tag: Identifier("Identifier", 3967..3977),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("Identifier", 3967..3977),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 3905..3981,
        },
        "Namepath": GrammarRule {
            name: Identifier("Namepath", 3988..3996),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("Identifier", 4003..4013),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 4003..4013),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: YggdrasilText {
                                                                    text: "::",
                                                                    insensitive: false,
                                                                    range: 4016..4018,
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: IGNORED,
                                                            },
                                                            Expression {
                                                                tag: Identifier("Identifier", 4020..4030),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("Identifier", 4020..4030),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 3982..4034,
        },
        "Identifier": GrammarRule {
            name: Identifier("Identifier", 4041..4051),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[_\\p{XID_start}]\\p{XID_continue}*",
                        span: 4058..4093,
                    },
                },
            },
            range: 4035..4095,
        },
        "Boolean": GrammarRule {
            name: Identifier("Boolean", 4102..4109),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("True", 4127..4131),
                        ),
                        branch: Expression {
                            tag: Identifier("True", 4127..4131),
                            remark: false,
                            body: YggdrasilText {
                                text: "true",
                                insensitive: false,
                                range: 4119..4123,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("False", 4147..4152),
                        ),
                        branch: Expression {
                            tag: Identifier("False", 4147..4152),
                            remark: false,
                            body: YggdrasilText {
                                text: "false",
                                insensitive: false,
                                range: 4139..4144,
                            },
                        },
                    },
                ],
            },
            range: 4096..4154,
        },
        "WhiteSpace": GrammarRule {
            name: Identifier("WhiteSpace", 4289..4299),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: true,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "\\p{White_Space}+",
                        span: 4306..4324,
                    },
                },
            },
            range: 4276..4326,
        },
    },
    token_sets: {},
    functions: {},
}