GrammarInfo {
    url: None,
    name: Identifier("Dejavu", 8..14),
    extensions: [],
    imports: {},
    exports: [],
    rules: {
        "Root": GrammarRule {
            name: Identifier("Root", 33..37),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: true,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: UnaryExpression {
                        base: Expression {
                            tag: None,
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: IGNORED,
                                    },
                                    Expression {
                                        tag: Identifier("Element", 44..51),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Element", 44..51),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                ],
                            },
                        },
                        operators: [
                            RepeatsBetween {
                                min: 0,
                                max: 4294967295,
                            },
                        ],
                    },
                },
            },
            range: 21..54,
        },
        "Element": GrammarRule {
            name: Identifier("Element", 62..69),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Text", 94..98),
                        ),
                        branch: Expression {
                            tag: Identifier("Text", 94..98),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("TextMany", 78..86),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Export", 121..127),
                        ),
                        branch: Expression {
                            tag: Identifier("Export", 121..127),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("TemplateExport", 105..119),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("If", 150..152),
                        ),
                        branch: Expression {
                            tag: Identifier("If", 150..152),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("TemplateIf", 134..144),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("For", 175..178),
                        ),
                        branch: Expression {
                            tag: Identifier("For", 175..178),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("TemplateFor", 159..170),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 56..180,
        },
        "TextMany": GrammarRule {
            name: Identifier("TextMany", 308..316),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: UnaryExpression {
                        base: Expression {
                            tag: None,
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: IGNORED,
                                    },
                                    Expression {
                                        tag: Identifier("TextElement", 323..334),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("TextElement", 323..334),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                ],
                            },
                        },
                        operators: [
                            RepeatsBetween {
                                min: 1,
                                max: 4294967295,
                            },
                        ],
                    },
                },
            },
            range: 302..337,
        },
        "TextElement": GrammarRule {
            name: Identifier("TextElement", 344..355),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Escape", 376..382),
                        ),
                        branch: Expression {
                            tag: Identifier("Escape", 376..382),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("TEMPLATE_E", 364..374),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("TextSpace", 401..410),
                        ),
                        branch: Expression {
                            tag: Identifier("TextSpace", 401..410),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("TEXT_SPACE", 389..399),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("TextWord", 429..437),
                        ),
                        branch: Expression {
                            tag: Identifier("TextWord", 429..437),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("TEXT_WORD", 417..426),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 338..439,
        },
        "TEMPLATE_E": GrammarRule {
            name: Identifier("TEMPLATE_E", 462..472),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "",
                        insensitive: false,
                        range: 0..0,
                    },
                },
            },
            range: 441..486,
        },
        "TEXT_SPACE": GrammarRule {
            name: Identifier("TEXT_SPACE", 505..515),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: true,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "\\p{White_Space}+",
                        span: 517..535,
                    },
                },
            },
            range: 505..535,
        },
        "TEXT_WORD": GrammarRule {
            name: Identifier("TEXT_WORD", 540..549),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: true,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[^<\\p{White_Space}]+",
                        span: 552..574,
                    },
                },
            },
            range: 540..574,
        },
        "TEMPLATE_L": GrammarRule {
            name: Identifier("TEMPLATE_L", 728..738),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "",
                                    insensitive: false,
                                    range: 0..0,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("SpaceControl", 764..776),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("SpaceControl", 764..776),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 1,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 698..779,
        },
        "TEMPLATE_R": GrammarRule {
            name: Identifier("TEMPLATE_R", 793..803),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("SpaceControl", 810..822),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("SpaceControl", 810..822),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 1,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "",
                                    insensitive: false,
                                    range: 0..0,
                                },
                            },
                        ],
                    },
                },
            },
            range: 780..830,
        },
        "SpaceControl": GrammarRule {
            name: Identifier("SpaceControl", 837..849),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("E", 863..864),
                        ),
                        branch: Expression {
                            tag: Identifier("E", 863..864),
                            remark: false,
                            body: YggdrasilText {
                                text: "",
                                insensitive: false,
                                range: 0..0,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("D", 876..877),
                        ),
                        branch: Expression {
                            tag: Identifier("D", 876..877),
                            remark: false,
                            body: YggdrasilText {
                                text: "",
                                insensitive: false,
                                range: 0..0,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("C", 889..890),
                        ),
                        branch: Expression {
                            tag: Identifier("C", 889..890),
                            remark: false,
                            body: YggdrasilText {
                                text: "",
                                insensitive: false,
                                range: 0..0,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("B", 902..903),
                        ),
                        branch: Expression {
                            tag: Identifier("B", 902..903),
                            remark: false,
                            body: YggdrasilText {
                                text: "",
                                insensitive: false,
                                range: 0..0,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("A", 915..916),
                        ),
                        branch: Expression {
                            tag: Identifier("A", 915..916),
                            remark: false,
                            body: YggdrasilText {
                                text: "",
                                insensitive: false,
                                range: 0..0,
                            },
                        },
                    },
                ],
            },
            range: 831..918,
        },
        "KW_END": GrammarRule {
            name: Identifier("KW_END", 947..953),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "",
                        insensitive: false,
                        range: 0..0,
                    },
                },
            },
            range: 947..960,
        },
        "TemplateExport": GrammarRule {
            name: Identifier("TemplateExport", 1094..1108),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_L", 1117..1127),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("exports", 1128..1135),
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("ExportItem", 1136..1146),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_R", 1148..1158),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 1088..1160,
        },
        "ExportItem": GrammarRule {
            name: Identifier("ExportItem", 1167..1177),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_EXPORT", 1186..1195),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("name", 1196..1200),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 1201..1211),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("KW_TO", 1217..1222),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("language", 1223..1231),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("Identifier", 1232..1242),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 1,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("KW_BY", 1250..1255),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: IGNORED,
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("KW_CLASS", 1256..1264),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("class", 1265..1270),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("NamepathFree", 1272..1284),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 1,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("KW_BY", 1292..1297),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: IGNORED,
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("KW_TRAIT", 1298..1306),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("trait", 1307..1312),
                                                    remark: false,
                                                    body: UnaryExpression {
                                                        base: Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: RuleReference {
                                                                name: Identifier("NamepathFree", 1313..1325),
                                                                boxed: false,
                                                                inline: false,
                                                            },
                                                        },
                                                        operators: [
                                                            RepeatsBetween {
                                                                min: 0,
                                                                max: 1,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 1,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 1161..1330,
        },
        "KW_EXPORT": GrammarRule {
            name: Identifier("KW_EXPORT", 1359..1368),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "",
                        insensitive: false,
                        range: 0..0,
                    },
                },
            },
            range: 1359..1378,
        },
        "KW_CLASS": GrammarRule {
            name: Identifier("KW_CLASS", 1383..1391),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "",
                        insensitive: false,
                        range: 0..0,
                    },
                },
            },
            range: 1383..1400,
        },
        "KW_TRAIT": GrammarRule {
            name: Identifier("KW_TRAIT", 1405..1413),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "",
                        insensitive: false,
                        range: 0..0,
                    },
                },
            },
            range: 1405..1422,
        },
        "KW_TO": GrammarRule {
            name: Identifier("KW_TO", 1427..1432),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "",
                        insensitive: false,
                        range: 0..0,
                    },
                },
            },
            range: 1427..1438,
        },
        "KW_BY": GrammarRule {
            name: Identifier("KW_BY", 1443..1448),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "",
                        insensitive: false,
                        range: 0..0,
                    },
                },
            },
            range: 1443..1454,
        },
        "TemplateIf": GrammarRule {
            name: Identifier("TemplateIf", 1591..1601),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("IfBegin", 1608..1615),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("IfBegin", 1608..1615),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("IfElseIf", 1616..1624),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("IfElseIf", 1616..1624),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("IfElse", 1626..1632),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("IfElse", 1626..1632),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 1,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("IfEnd", 1634..1639),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("IfEnd", 1634..1639),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 1578..1641,
        },
        "IfBegin": GrammarRule {
            name: Identifier("IfBegin", 1655..1662),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("TEMPLATE_L", 1669..1679),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_L", 1669..1679),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_IF", 1683..1688),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("Expression", 1691..1701),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Expression", 1691..1701),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("TEMPLATE_R", 1704..1714),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_R", 1704..1714),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("Element", 1715..1722),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Element", 1715..1722),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 1642..1725,
        },
        "IfElse": GrammarRule {
            name: Identifier("IfElse", 1739..1745),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("TEMPLATE_L", 1752..1762),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_L", 1752..1762),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_ELSE", 1766..1773),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("TEMPLATE_R", 1776..1786),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_R", 1776..1786),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("Element", 1787..1794),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Element", 1787..1794),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 1726..1797,
        },
        "IfElseIf": GrammarRule {
            name: Identifier("IfElseIf", 1811..1819),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("TEMPLATE_L", 1826..1836),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_L", 1826..1836),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_ELSE", 1840..1847),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_IF", 1851..1856),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("Expression", 1859..1869),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Expression", 1859..1869),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("TEMPLATE_R", 1872..1882),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_R", 1872..1882),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("Element", 1883..1890),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Element", 1883..1890),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 1798..1893,
        },
        "IfEnd": GrammarRule {
            name: Identifier("IfEnd", 1907..1912),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("TEMPLATE_L", 1919..1929),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_L", 1919..1929),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_END", 1933..1939),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("KW_IF", 1943..1948),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 1,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("TEMPLATE_R", 1952..1962),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_R", 1952..1962),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 1894..1964,
        },
        "KW_IF": GrammarRule {
            name: Identifier("KW_IF", 1993..1998),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "",
                        insensitive: false,
                        range: 0..0,
                    },
                },
            },
            range: 1993..2004,
        },
        "KW_ELSE": GrammarRule {
            name: Identifier("KW_ELSE", 2009..2016),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "",
                        insensitive: false,
                        range: 0..0,
                    },
                },
            },
            range: 2009..2024,
        },
        "TemplateFor": GrammarRule {
            name: Identifier("TemplateFor", 2161..2172),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("ForBegin", 2179..2187),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("ForBegin", 2179..2187),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("ForElse", 2188..2195),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("ForElse", 2188..2195),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 1,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("ForEnd", 2197..2203),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("ForEnd", 2197..2203),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 2148..2205,
        },
        "ForBegin": GrammarRule {
            name: Identifier("ForBegin", 2219..2227),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("TEMPLATE_L", 2234..2244),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_L", 2234..2244),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_FOR", 2248..2254),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("Expression", 2257..2267),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Expression", 2257..2267),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("TEMPLATE_R", 2270..2280),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_R", 2270..2280),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("Element", 2281..2288),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Element", 2281..2288),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 2206..2291,
        },
        "ForElse": GrammarRule {
            name: Identifier("ForElse", 2305..2312),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("TEMPLATE_L", 2319..2329),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_L", 2319..2329),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_ELSE", 2333..2340),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("TEMPLATE_R", 2343..2353),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_R", 2343..2353),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("Element", 2354..2361),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Element", 2354..2361),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 2292..2364,
        },
        "ForEnd": GrammarRule {
            name: Identifier("ForEnd", 2378..2384),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("TEMPLATE_L", 2391..2401),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_L", 2391..2401),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_END", 2405..2411),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("KW_FOR", 2415..2421),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 1,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("TEMPLATE_R", 2425..2435),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_R", 2425..2435),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 2365..2437,
        },
        "KW_FOR": GrammarRule {
            name: Identifier("KW_FOR", 2466..2472),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "",
                        insensitive: false,
                        range: 0..0,
                    },
                },
            },
            range: 2466..2479,
        },
        "Expression": GrammarRule {
            name: Identifier("Expression", 2609..2619),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("Term", 2626..2630),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Term", 2626..2630),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("ExpressionRest", 2631..2645),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("ExpressionRest", 2631..2645),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 2603..2648,
        },
        "ExpressionRest": GrammarRule {
            name: Identifier("ExpressionRest", 2655..2669),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("Infix", 2676..2681),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Infix", 2676..2681),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("Term", 2682..2686),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Term", 2682..2686),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 2649..2688,
        },
        "Infix": GrammarRule {
            name: Identifier("Infix", 2695..2700),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Add", 2714..2717),
                        ),
                        branch: Expression {
                            tag: Identifier("Add", 2714..2717),
                            remark: false,
                            body: YggdrasilText {
                                text: "",
                                insensitive: false,
                                range: 0..0,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Mul", 2729..2732),
                        ),
                        branch: Expression {
                            tag: Identifier("Mul", 2729..2732),
                            remark: false,
                            body: YggdrasilText {
                                text: "",
                                insensitive: false,
                                range: 0..0,
                            },
                        },
                    },
                ],
            },
            range: 2689..2734,
        },
        "Term": GrammarRule {
            name: Identifier("Term", 2741..2745),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("Prefix", 2752..2758),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("Prefix", 2752..2758),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("Atomic", 2760..2766),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Atomic", 2760..2766),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("Suffix", 2767..2773),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("Suffix", 2767..2773),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 2735..2776,
        },
        "Prefix": GrammarRule {
            name: Identifier("Prefix", 2783..2789),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Not", 2803..2806),
                        ),
                        branch: Expression {
                            tag: Identifier("Not", 2803..2806),
                            remark: false,
                            body: YggdrasilText {
                                text: "",
                                insensitive: false,
                                range: 0..0,
                            },
                        },
                    },
                ],
            },
            range: 2777..2808,
        },
        "Suffix": GrammarRule {
            name: Identifier("Suffix", 2815..2821),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Null", 2835..2839),
                        ),
                        branch: Expression {
                            tag: Identifier("Null", 2835..2839),
                            remark: false,
                            body: YggdrasilText {
                                text: "",
                                insensitive: false,
                                range: 0..0,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Suffix1", 0..0),
                        ),
                        branch: Expression {
                            tag: Identifier("Suffix1", 0..0),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "",
                                            insensitive: false,
                                            range: 0..0,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: IGNORED,
                                    },
                                    Expression {
                                        tag: Identifier("Identifier", 2850..2860),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Identifier", 2850..2860),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                ],
            },
            range: 2809..2862,
        },
        "Atomic": GrammarRule {
            name: Identifier("Atomic", 2990..2996),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Boolean", 3069..3076),
                        ),
                        branch: Expression {
                            tag: Identifier("Boolean", 3069..3076),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Boolean", 3043..3050),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Identifier", 3109..3119),
                        ),
                        branch: Expression {
                            tag: Identifier("Identifier", 3109..3119),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Identifier", 3083..3093),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Number", 3152..3158),
                        ),
                        branch: Expression {
                            tag: Identifier("Number", 3152..3158),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Number", 3126..3132),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 2984..3160,
        },
        "String": GrammarRule {
            name: Identifier("String", 3288..3294),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DoubleQuote", 3312..3323),
                        ),
                        branch: Expression {
                            tag: Identifier("DoubleQuote", 3312..3323),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "",
                                            insensitive: false,
                                            range: 0..0,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: IGNORED,
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "",
                                            insensitive: false,
                                            range: 0..0,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("SingleQuote", 3339..3350),
                        ),
                        branch: Expression {
                            tag: Identifier("SingleQuote", 3339..3350),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "",
                                            insensitive: false,
                                            range: 0..0,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: IGNORED,
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "",
                                            insensitive: false,
                                            range: 0..0,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                ],
            },
            range: 3282..3352,
        },
        "Number": GrammarRule {
            name: Identifier("Number", 3487..3493),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Dec", 3514..3517),
                        ),
                        branch: Expression {
                            tag: Identifier("Dec", 3514..3517),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Digits", 3502..3508),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 3474..3606,
        },
        "Digits": GrammarRule {
            name: Identifier("Digits", 3618..3624),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: true,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "(0|[1-9][0-9])(.[0-9]+)?",
                        span: 3631..3657,
                    },
                },
            },
            range: 3607..3659,
        },
        "Unit": GrammarRule {
            name: Identifier("Unit", 3666..3670),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: Identifier("Identifier", 3677..3687),
                    remark: false,
                    body: RuleReference {
                        name: Identifier("Identifier", 3677..3687),
                        boxed: false,
                        inline: false,
                    },
                },
            },
            range: 3660..3689,
        },
        "BIN": GrammarRule {
            name: Identifier("BIN", 3702..3705),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[0-1]+",
                        span: 3707..3715,
                    },
                },
            },
            range: 3702..3715,
        },
        "OCT": GrammarRule {
            name: Identifier("OCT", 3720..3723),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[0-7]+",
                        span: 3725..3733,
                    },
                },
            },
            range: 3720..3733,
        },
        "HEX": GrammarRule {
            name: Identifier("HEX", 3738..3741),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[0-9a-fA-F]+",
                        span: 3743..3757,
                    },
                },
            },
            range: 3738..3757,
        },
        "NamepathFree": GrammarRule {
            name: Identifier("NamepathFree", 3887..3899),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("Identifier", 3918..3928),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 3918..3928),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: ChoiceExpression {
                                                                    branches: [
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: YggdrasilText {
                                                                                text: "",
                                                                                insensitive: false,
                                                                                range: 0..0,
                                                                            },
                                                                        },
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: YggdrasilText {
                                                                                text: "",
                                                                                insensitive: false,
                                                                                range: 0..0,
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: IGNORED,
                                                            },
                                                            Expression {
                                                                tag: Identifier("Identifier", 3943..3953),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("Identifier", 3943..3953),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 3881..3957,
        },
        "Namepath": GrammarRule {
            name: Identifier("Namepath", 3964..3972),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("Identifier", 3979..3989),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 3979..3989),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: YggdrasilText {
                                                                    text: "",
                                                                    insensitive: false,
                                                                    range: 0..0,
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: IGNORED,
                                                            },
                                                            Expression {
                                                                tag: Identifier("Identifier", 3996..4006),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("Identifier", 3996..4006),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 3958..4010,
        },
        "Identifier": GrammarRule {
            name: Identifier("Identifier", 4017..4027),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[_\\p{XID_start}]\\p{XID_continue}*",
                        span: 4034..4069,
                    },
                },
            },
            range: 4011..4071,
        },
        "Boolean": GrammarRule {
            name: Identifier("Boolean", 4078..4085),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("True", 4103..4107),
                        ),
                        branch: Expression {
                            tag: Identifier("True", 4103..4107),
                            remark: false,
                            body: YggdrasilText {
                                text: "",
                                insensitive: false,
                                range: 0..0,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("False", 4123..4128),
                        ),
                        branch: Expression {
                            tag: Identifier("False", 4123..4128),
                            remark: false,
                            body: YggdrasilText {
                                text: "",
                                insensitive: false,
                                range: 0..0,
                            },
                        },
                    },
                ],
            },
            range: 4072..4130,
        },
        "WhiteSpace": GrammarRule {
            name: Identifier("WhiteSpace", 4265..4275),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: true,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "\\p{White_Space}+",
                        span: 4282..4300,
                    },
                },
            },
            range: 4252..4302,
        },
    },
    token_sets: {},
    functions: {},
}