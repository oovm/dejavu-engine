GrammarInfo {
    url: None,
    name: Identifier("Dejavu", 8..14),
    extensions: [],
    imports: {},
    exports: [],
    rules: {
        "Root": GrammarRule {
            name: Identifier("Root", 33..37),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: true,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: UnaryExpression {
                        base: Expression {
                            tag: None,
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: IGNORED,
                                    },
                                    Expression {
                                        tag: Identifier("Element", 44..51),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Element", 44..51),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                ],
                            },
                        },
                        operators: [
                            RepeatsBetween {
                                min: 0,
                                max: 4294967295,
                            },
                        ],
                    },
                },
            },
            range: 21..54,
        },
        "Element": GrammarRule {
            name: Identifier("Element", 62..69),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Text", 94..98),
                        ),
                        branch: Expression {
                            tag: Identifier("Text", 94..98),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("TextMany", 78..86),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Export", 121..127),
                        ),
                        branch: Expression {
                            tag: Identifier("Export", 121..127),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("TemplateExport", 105..119),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("If", 150..152),
                        ),
                        branch: Expression {
                            tag: Identifier("If", 150..152),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("TemplateIf", 134..144),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("For", 175..178),
                        ),
                        branch: Expression {
                            tag: Identifier("For", 175..178),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("TemplateFor", 159..170),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 56..180,
        },
        "TextMany": GrammarRule {
            name: Identifier("TextMany", 315..323),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: UnaryExpression {
                        base: Expression {
                            tag: Identifier("TextElement", 330..341),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("TextElement", 330..341),
                                boxed: false,
                                inline: false,
                            },
                        },
                        operators: [
                            RepeatsBetween {
                                min: 1,
                                max: 4294967295,
                            },
                        ],
                    },
                },
            },
            range: 302..344,
        },
        "TextElement": GrammarRule {
            name: Identifier("TextElement", 351..362),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Escape", 384..390),
                        ),
                        branch: Expression {
                            tag: Identifier("Escape", 384..390),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("TEMPLATE_E", 372..382),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("TextSpace", 409..418),
                        ),
                        branch: Expression {
                            tag: Identifier("TextSpace", 409..418),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("TEXT_SPACE", 397..407),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("TextWord", 437..445),
                        ),
                        branch: Expression {
                            tag: Identifier("TextWord", 437..445),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("TEXT_WORD", 425..434),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 345..447,
        },
        "TEMPLATE_E": GrammarRule {
            name: Identifier("TEMPLATE_E", 470..480),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "<%!",
                        insensitive: false,
                        range: 488..491,
                    },
                },
            },
            range: 449..494,
        },
        "TEXT_SPACE": GrammarRule {
            name: Identifier("TEXT_SPACE", 513..523),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: true,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "\\p{White_Space}+",
                        span: 525..543,
                    },
                },
            },
            range: 513..543,
        },
        "TEXT_WORD": GrammarRule {
            name: Identifier("TEXT_WORD", 548..557),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: true,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[^<\\p{White_Space}]+",
                        span: 560..582,
                    },
                },
            },
            range: 548..582,
        },
        "TEMPLATE_L": GrammarRule {
            name: Identifier("TEMPLATE_L", 736..746),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "<%",
                                    insensitive: false,
                                    range: 768..770,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("SpaceControl", 772..784),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("SpaceControl", 772..784),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 1,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 706..787,
        },
        "TEMPLATE_R": GrammarRule {
            name: Identifier("TEMPLATE_R", 801..811),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("SpaceControl", 818..830),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("SpaceControl", 818..830),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 1,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "%>",
                                    insensitive: false,
                                    range: 833..835,
                                },
                            },
                        ],
                    },
                },
            },
            range: 788..838,
        },
        "SpaceControl": GrammarRule {
            name: Identifier("SpaceControl", 845..857),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Nothing", 871..878),
                        ),
                        branch: Expression {
                            tag: Identifier("Nothing", 871..878),
                            remark: false,
                            body: YggdrasilText {
                                text: "=",
                                insensitive: false,
                                range: 867..868,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Break0", 890..896),
                        ),
                        branch: Expression {
                            tag: Identifier("Break0", 890..896),
                            remark: false,
                            body: YggdrasilText {
                                text: "~",
                                insensitive: false,
                                range: 886..887,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Break1", 908..914),
                        ),
                        branch: Expression {
                            tag: Identifier("Break1", 908..914),
                            remark: false,
                            body: YggdrasilText {
                                text: "-",
                                insensitive: false,
                                range: 904..905,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Delete0", 926..933),
                        ),
                        branch: Expression {
                            tag: Identifier("Delete0", 926..933),
                            remark: false,
                            body: YggdrasilText {
                                text: "_",
                                insensitive: false,
                                range: 922..923,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Delete1", 945..952),
                        ),
                        branch: Expression {
                            tag: Identifier("Delete1", 945..952),
                            remark: false,
                            body: YggdrasilText {
                                text: ".",
                                insensitive: false,
                                range: 941..942,
                            },
                        },
                    },
                ],
            },
            range: 839..954,
        },
        "KW_END": GrammarRule {
            name: Identifier("KW_END", 983..989),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "end",
                        insensitive: false,
                        range: 992..995,
                    },
                },
            },
            range: 983..996,
        },
        "TemplateExport": GrammarRule {
            name: Identifier("TemplateExport", 1130..1144),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_L", 1153..1163),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("exports", 1164..1171),
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("ExportItem", 1172..1182),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_R", 1184..1194),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 1124..1196,
        },
        "ExportItem": GrammarRule {
            name: Identifier("ExportItem", 1203..1213),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_EXPORT", 1222..1231),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("name", 1232..1236),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 1237..1247),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("KW_TO", 1253..1258),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("language", 1259..1267),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("Identifier", 1268..1278),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 1,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("KW_BY", 1286..1291),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: IGNORED,
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("KW_CLASS", 1292..1300),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("class", 1301..1306),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("NamepathFree", 1308..1320),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 1,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("KW_BY", 1328..1333),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: IGNORED,
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("KW_TRAIT", 1334..1342),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("trait", 1343..1348),
                                                    remark: false,
                                                    body: UnaryExpression {
                                                        base: Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: RuleReference {
                                                                name: Identifier("NamepathFree", 1349..1361),
                                                                boxed: false,
                                                                inline: false,
                                                            },
                                                        },
                                                        operators: [
                                                            RepeatsBetween {
                                                                min: 0,
                                                                max: 1,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 1,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 1197..1366,
        },
        "KW_EXPORT": GrammarRule {
            name: Identifier("KW_EXPORT", 1395..1404),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "export",
                        insensitive: false,
                        range: 1407..1413,
                    },
                },
            },
            range: 1395..1414,
        },
        "KW_CLASS": GrammarRule {
            name: Identifier("KW_CLASS", 1419..1427),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "class",
                        insensitive: false,
                        range: 1430..1435,
                    },
                },
            },
            range: 1419..1436,
        },
        "KW_TRAIT": GrammarRule {
            name: Identifier("KW_TRAIT", 1441..1449),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "trait",
                        insensitive: false,
                        range: 1452..1457,
                    },
                },
            },
            range: 1441..1458,
        },
        "KW_TO": GrammarRule {
            name: Identifier("KW_TO", 1463..1468),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "to",
                        insensitive: false,
                        range: 1471..1473,
                    },
                },
            },
            range: 1463..1474,
        },
        "KW_BY": GrammarRule {
            name: Identifier("KW_BY", 1479..1484),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "by",
                        insensitive: false,
                        range: 1487..1489,
                    },
                },
            },
            range: 1479..1490,
        },
        "TemplateIf": GrammarRule {
            name: Identifier("TemplateIf", 1627..1637),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("IfBegin", 1644..1651),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("IfBegin", 1644..1651),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("IfElseIf", 1652..1660),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("IfElseIf", 1652..1660),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("IfElse", 1662..1668),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("IfElse", 1662..1668),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 1,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("IfEnd", 1670..1675),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("IfEnd", 1670..1675),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 1614..1677,
        },
        "IfBegin": GrammarRule {
            name: Identifier("IfBegin", 1691..1698),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("TEMPLATE_L", 1705..1715),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_L", 1705..1715),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_IF", 1719..1724),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("Expression", 1727..1737),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Expression", 1727..1737),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("TEMPLATE_R", 1740..1750),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_R", 1740..1750),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("Element", 1751..1758),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Element", 1751..1758),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 1678..1761,
        },
        "IfElse": GrammarRule {
            name: Identifier("IfElse", 1775..1781),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("TEMPLATE_L", 1788..1798),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_L", 1788..1798),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_ELSE", 1802..1809),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("TEMPLATE_R", 1812..1822),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_R", 1812..1822),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("Element", 1823..1830),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Element", 1823..1830),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 1762..1833,
        },
        "IfElseIf": GrammarRule {
            name: Identifier("IfElseIf", 1847..1855),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("TEMPLATE_L", 1862..1872),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_L", 1862..1872),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_ELSE", 1876..1883),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_IF", 1887..1892),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("Expression", 1895..1905),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Expression", 1895..1905),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("TEMPLATE_R", 1908..1918),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_R", 1908..1918),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("Element", 1919..1926),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Element", 1919..1926),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 1834..1929,
        },
        "IfEnd": GrammarRule {
            name: Identifier("IfEnd", 1943..1948),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("TEMPLATE_L", 1955..1965),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_L", 1955..1965),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_END", 1969..1975),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("KW_IF", 1979..1984),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 1,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("TEMPLATE_R", 1988..1998),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_R", 1988..1998),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 1930..2000,
        },
        "KW_IF": GrammarRule {
            name: Identifier("KW_IF", 2029..2034),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "if",
                        insensitive: false,
                        range: 2037..2039,
                    },
                },
            },
            range: 2029..2040,
        },
        "KW_ELSE": GrammarRule {
            name: Identifier("KW_ELSE", 2045..2052),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "else",
                        insensitive: false,
                        range: 2055..2059,
                    },
                },
            },
            range: 2045..2060,
        },
        "TemplateFor": GrammarRule {
            name: Identifier("TemplateFor", 2197..2208),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("ForBegin", 2215..2223),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("ForBegin", 2215..2223),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("ForElse", 2224..2231),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("ForElse", 2224..2231),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 1,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("ForEnd", 2233..2239),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("ForEnd", 2233..2239),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 2184..2241,
        },
        "ForBegin": GrammarRule {
            name: Identifier("ForBegin", 2255..2263),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("TEMPLATE_L", 2270..2280),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_L", 2270..2280),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_FOR", 2288..2294),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("KW_IN", 2299..2304),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("KW_IN", 2299..2304),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        Negative,
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("Pattern", 2305..2312),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Pattern", 2305..2312),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("KW_IN", 2320..2325),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_IN", 2320..2325),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("Expression", 2328..2338),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Expression", 2328..2338),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("TEMPLATE_R", 2345..2355),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_R", 2345..2355),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("Element", 2356..2363),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Element", 2356..2363),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 2242..2366,
        },
        "ForElse": GrammarRule {
            name: Identifier("ForElse", 2380..2387),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("TEMPLATE_L", 2394..2404),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_L", 2394..2404),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_ELSE", 2408..2415),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("TEMPLATE_R", 2418..2428),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_R", 2418..2428),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("Element", 2429..2436),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Element", 2429..2436),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 2367..2439,
        },
        "ForEnd": GrammarRule {
            name: Identifier("ForEnd", 2453..2459),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("TEMPLATE_L", 2466..2476),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_L", 2466..2476),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_END", 2480..2486),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("KW_FOR", 2490..2496),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 1,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("TEMPLATE_R", 2500..2510),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_R", 2500..2510),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 2440..2512,
        },
        "KW_FOR": GrammarRule {
            name: Identifier("KW_FOR", 2541..2547),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "for",
                        insensitive: false,
                        range: 2550..2553,
                    },
                },
            },
            range: 2541..2554,
        },
        "KW_IN": GrammarRule {
            name: Identifier("KW_IN", 2559..2564),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "in",
                        insensitive: false,
                        range: 2567..2569,
                    },
                },
            },
            range: 2559..2570,
        },
        "Pattern": GrammarRule {
            name: Identifier("Pattern", 2698..2705),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("BarePattern", 2714..2725),
                        ),
                        branch: Expression {
                            tag: Identifier("BarePattern", 2714..2725),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("BarePattern", 2714..2725),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 2692..2727,
        },
        "BarePattern": GrammarRule {
            name: Identifier("BarePattern", 2734..2745),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("Identifier", 2752..2762),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 2752..2762),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: YggdrasilText {
                                                                    text: ",",
                                                                    insensitive: false,
                                                                    range: 2765..2766,
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: IGNORED,
                                                            },
                                                            Expression {
                                                                tag: Identifier("Identifier", 2768..2778),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("Identifier", 2768..2778),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: ",",
                                            insensitive: false,
                                            range: 2782..2783,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 1,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 2728..2787,
        },
        "Expression": GrammarRule {
            name: Identifier("Expression", 2915..2925),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("Term", 2932..2936),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Term", 2932..2936),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("ExpressionRest", 2937..2951),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("ExpressionRest", 2937..2951),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 2909..2954,
        },
        "ExpressionRest": GrammarRule {
            name: Identifier("ExpressionRest", 2961..2975),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("Infix", 2982..2987),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Infix", 2982..2987),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("Term", 2988..2992),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Term", 2988..2992),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 2955..2994,
        },
        "Infix": GrammarRule {
            name: Identifier("Infix", 3001..3006),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Add", 3020..3023),
                        ),
                        branch: Expression {
                            tag: Identifier("Add", 3020..3023),
                            remark: false,
                            body: YggdrasilText {
                                text: "+",
                                insensitive: false,
                                range: 3016..3017,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Mul", 3035..3038),
                        ),
                        branch: Expression {
                            tag: Identifier("Mul", 3035..3038),
                            remark: false,
                            body: YggdrasilText {
                                text: "-",
                                insensitive: false,
                                range: 3031..3032,
                            },
                        },
                    },
                ],
            },
            range: 2995..3040,
        },
        "Term": GrammarRule {
            name: Identifier("Term", 3047..3051),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("Prefix", 3058..3064),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("Prefix", 3058..3064),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("Atomic", 3066..3072),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Atomic", 3066..3072),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("Suffix", 3073..3079),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("Suffix", 3073..3079),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 3041..3082,
        },
        "Prefix": GrammarRule {
            name: Identifier("Prefix", 3089..3095),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Not", 3109..3112),
                        ),
                        branch: Expression {
                            tag: Identifier("Not", 3109..3112),
                            remark: false,
                            body: YggdrasilText {
                                text: "!",
                                insensitive: false,
                                range: 3105..3106,
                            },
                        },
                    },
                ],
            },
            range: 3083..3114,
        },
        "Suffix": GrammarRule {
            name: Identifier("Suffix", 3121..3127),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Null", 3141..3145),
                        ),
                        branch: Expression {
                            tag: Identifier("Null", 3141..3145),
                            remark: false,
                            body: YggdrasilText {
                                text: "?",
                                insensitive: false,
                                range: 3137..3138,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DotCall", 3168..3175),
                        ),
                        branch: Expression {
                            tag: Identifier("DotCall", 3168..3175),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: ".",
                                            insensitive: false,
                                            range: 3153..3154,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: IGNORED,
                                    },
                                    Expression {
                                        tag: Identifier("Identifier", 3156..3166),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Identifier", 3156..3166),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                ],
            },
            range: 3115..3177,
        },
        "Atomic": GrammarRule {
            name: Identifier("Atomic", 3305..3311),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Boolean", 3384..3391),
                        ),
                        branch: Expression {
                            tag: Identifier("Boolean", 3384..3391),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Boolean", 3358..3365),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Identifier", 3424..3434),
                        ),
                        branch: Expression {
                            tag: Identifier("Identifier", 3424..3434),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Identifier", 3398..3408),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Number", 3467..3473),
                        ),
                        branch: Expression {
                            tag: Identifier("Number", 3467..3473),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Number", 3441..3447),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 3299..3475,
        },
        "String": GrammarRule {
            name: Identifier("String", 3603..3609),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DoubleQuote", 3627..3638),
                        ),
                        branch: Expression {
                            tag: Identifier("DoubleQuote", 3627..3638),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "'",
                                            insensitive: false,
                                            range: 3619..3620,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: IGNORED,
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "'",
                                            insensitive: false,
                                            range: 3623..3624,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("SingleQuote", 3654..3665),
                        ),
                        branch: Expression {
                            tag: Identifier("SingleQuote", 3654..3665),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "\"",
                                            insensitive: false,
                                            range: 3646..3647,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: IGNORED,
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "\"",
                                            insensitive: false,
                                            range: 3650..3651,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                ],
            },
            range: 3597..3667,
        },
        "Number": GrammarRule {
            name: Identifier("Number", 3802..3808),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Dec", 3829..3832),
                        ),
                        branch: Expression {
                            tag: Identifier("Dec", 3829..3832),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Digits", 3817..3823),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Bin", 3851..3854),
                        ),
                        branch: Expression {
                            tag: Identifier("Bin", 3851..3854),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilRegex {
                                            raw: "0b",
                                            span: 3839..3843,
                                        },
                                    },
                                    Expression {
                                        tag: Identifier("BIN", 3844..3847),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("BIN", 3844..3847),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Oct", 3873..3876),
                        ),
                        branch: Expression {
                            tag: Identifier("Oct", 3873..3876),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilRegex {
                                            raw: "0o",
                                            span: 3861..3865,
                                        },
                                    },
                                    Expression {
                                        tag: Identifier("OCT", 3866..3869),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("OCT", 3866..3869),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Hex", 3895..3898),
                        ),
                        branch: Expression {
                            tag: Identifier("Hex", 3895..3898),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilRegex {
                                            raw: "0x",
                                            span: 3883..3887,
                                        },
                                    },
                                    Expression {
                                        tag: Identifier("HEX", 3888..3891),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("HEX", 3888..3891),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                ],
            },
            range: 3789..3900,
        },
        "Digits": GrammarRule {
            name: Identifier("Digits", 3912..3918),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: true,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "(0|[1-9][0-9])(.[0-9]+)?",
                        span: 3925..3951,
                    },
                },
            },
            range: 3901..3953,
        },
        "Unit": GrammarRule {
            name: Identifier("Unit", 3960..3964),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: Identifier("Identifier", 3971..3981),
                    remark: false,
                    body: RuleReference {
                        name: Identifier("Identifier", 3971..3981),
                        boxed: false,
                        inline: false,
                    },
                },
            },
            range: 3954..3983,
        },
        "BIN": GrammarRule {
            name: Identifier("BIN", 3996..3999),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[0-1]+",
                        span: 4001..4009,
                    },
                },
            },
            range: 3996..4009,
        },
        "OCT": GrammarRule {
            name: Identifier("OCT", 4014..4017),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[0-7]+",
                        span: 4019..4027,
                    },
                },
            },
            range: 4014..4027,
        },
        "HEX": GrammarRule {
            name: Identifier("HEX", 4032..4035),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[0-9a-fA-F]+",
                        span: 4037..4051,
                    },
                },
            },
            range: 4032..4051,
        },
        "NamepathFree": GrammarRule {
            name: Identifier("NamepathFree", 4181..4193),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("Identifier", 4212..4222),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 4212..4222),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: ChoiceExpression {
                                                                    branches: [
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: YggdrasilText {
                                                                                text: ".",
                                                                                insensitive: false,
                                                                                range: 4226..4227,
                                                                            },
                                                                        },
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: YggdrasilText {
                                                                                text: "::",
                                                                                insensitive: false,
                                                                                range: 4232..4234,
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: IGNORED,
                                                            },
                                                            Expression {
                                                                tag: Identifier("Identifier", 4237..4247),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("Identifier", 4237..4247),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 4175..4251,
        },
        "Namepath": GrammarRule {
            name: Identifier("Namepath", 4258..4266),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("Identifier", 4273..4283),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 4273..4283),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: YggdrasilText {
                                                                    text: "::",
                                                                    insensitive: false,
                                                                    range: 4286..4288,
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: IGNORED,
                                                            },
                                                            Expression {
                                                                tag: Identifier("Identifier", 4290..4300),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("Identifier", 4290..4300),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 4252..4304,
        },
        "Identifier": GrammarRule {
            name: Identifier("Identifier", 4311..4321),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[_\\p{XID_start}]\\p{XID_continue}*",
                        span: 4328..4363,
                    },
                },
            },
            range: 4305..4365,
        },
        "Boolean": GrammarRule {
            name: Identifier("Boolean", 4372..4379),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("True", 4397..4401),
                        ),
                        branch: Expression {
                            tag: Identifier("True", 4397..4401),
                            remark: false,
                            body: YggdrasilText {
                                text: "true",
                                insensitive: false,
                                range: 4389..4393,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("False", 4417..4422),
                        ),
                        branch: Expression {
                            tag: Identifier("False", 4417..4422),
                            remark: false,
                            body: YggdrasilText {
                                text: "false",
                                insensitive: false,
                                range: 4409..4414,
                            },
                        },
                    },
                ],
            },
            range: 4366..4424,
        },
        "WhiteSpace": GrammarRule {
            name: Identifier("WhiteSpace", 4559..4569),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: true,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "\\p{White_Space}+",
                        span: 4576..4594,
                    },
                },
            },
            range: 4546..4596,
        },
    },
    token_sets: {},
    functions: {},
}