GrammarInfo {
    url: None,
    name: Identifier("Dejavu", 8..14),
    extensions: [],
    imports: {},
    exports: [],
    rules: {
        "Root": GrammarRule {
            name: Identifier("Root", 33..37),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: true,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: UnaryExpression {
                        base: Expression {
                            tag: None,
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: IGNORED,
                                    },
                                    Expression {
                                        tag: Identifier("Element", 44..51),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Element", 44..51),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                ],
                            },
                        },
                        operators: [
                            RepeatsBetween {
                                min: 0,
                                max: 4294967295,
                            },
                        ],
                    },
                },
            },
            range: 21..54,
        },
        "Element": GrammarRule {
            name: Identifier("Element", 62..69),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Text", 94..98),
                        ),
                        branch: Expression {
                            tag: Identifier("Text", 94..98),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("TextMany", 78..86),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Export", 121..127),
                        ),
                        branch: Expression {
                            tag: Identifier("Export", 121..127),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("TemplateExport", 105..119),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("If", 150..152),
                        ),
                        branch: Expression {
                            tag: Identifier("If", 150..152),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("TemplateIf", 134..144),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("For", 175..178),
                        ),
                        branch: Expression {
                            tag: Identifier("For", 175..178),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("TemplateFor", 159..170),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 56..180,
        },
        "TextMany": GrammarRule {
            name: Identifier("TextMany", 308..316),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: UnaryExpression {
                        base: Expression {
                            tag: None,
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: IGNORED,
                                    },
                                    Expression {
                                        tag: Identifier("TextElement", 323..334),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("TextElement", 323..334),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                ],
                            },
                        },
                        operators: [
                            RepeatsBetween {
                                min: 1,
                                max: 4294967295,
                            },
                        ],
                    },
                },
            },
            range: 302..337,
        },
        "TextElement": GrammarRule {
            name: Identifier("TextElement", 344..355),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Escape", 377..383),
                        ),
                        branch: Expression {
                            tag: Identifier("Escape", 377..383),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("TEMPLATE_E", 365..375),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("TextSpace", 402..411),
                        ),
                        branch: Expression {
                            tag: Identifier("TextSpace", 402..411),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("TEXT_SPACE", 390..400),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("TextWord", 430..438),
                        ),
                        branch: Expression {
                            tag: Identifier("TextWord", 430..438),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("TEXT_WORD", 418..427),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 338..440,
        },
        "TEMPLATE_E": GrammarRule {
            name: Identifier("TEMPLATE_E", 463..473),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "<%!",
                        insensitive: false,
                        range: 481..484,
                    },
                },
            },
            range: 442..487,
        },
        "TEXT_SPACE": GrammarRule {
            name: Identifier("TEXT_SPACE", 506..516),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: true,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "\\p{White_Space}+",
                        span: 518..536,
                    },
                },
            },
            range: 506..536,
        },
        "TEXT_WORD": GrammarRule {
            name: Identifier("TEXT_WORD", 541..550),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: true,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[^<\\p{White_Space}]+",
                        span: 553..575,
                    },
                },
            },
            range: 541..575,
        },
        "TEMPLATE_L": GrammarRule {
            name: Identifier("TEMPLATE_L", 729..739),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "<%",
                                    insensitive: false,
                                    range: 761..763,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("SpaceControl", 765..777),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("SpaceControl", 765..777),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 1,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 699..780,
        },
        "TEMPLATE_R": GrammarRule {
            name: Identifier("TEMPLATE_R", 794..804),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("SpaceControl", 811..823),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("SpaceControl", 811..823),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 1,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "%>",
                                    insensitive: false,
                                    range: 826..828,
                                },
                            },
                        ],
                    },
                },
            },
            range: 781..831,
        },
        "SpaceControl": GrammarRule {
            name: Identifier("SpaceControl", 838..850),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Nothing", 864..871),
                        ),
                        branch: Expression {
                            tag: Identifier("Nothing", 864..871),
                            remark: false,
                            body: YggdrasilText {
                                text: "=",
                                insensitive: false,
                                range: 860..861,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Break0", 883..889),
                        ),
                        branch: Expression {
                            tag: Identifier("Break0", 883..889),
                            remark: false,
                            body: YggdrasilText {
                                text: "~",
                                insensitive: false,
                                range: 879..880,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Break1", 901..907),
                        ),
                        branch: Expression {
                            tag: Identifier("Break1", 901..907),
                            remark: false,
                            body: YggdrasilText {
                                text: "-",
                                insensitive: false,
                                range: 897..898,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Delete0", 919..926),
                        ),
                        branch: Expression {
                            tag: Identifier("Delete0", 919..926),
                            remark: false,
                            body: YggdrasilText {
                                text: "_",
                                insensitive: false,
                                range: 915..916,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Delete1", 938..945),
                        ),
                        branch: Expression {
                            tag: Identifier("Delete1", 938..945),
                            remark: false,
                            body: YggdrasilText {
                                text: ".",
                                insensitive: false,
                                range: 934..935,
                            },
                        },
                    },
                ],
            },
            range: 832..947,
        },
        "KW_END": GrammarRule {
            name: Identifier("KW_END", 976..982),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "end",
                        insensitive: false,
                        range: 985..988,
                    },
                },
            },
            range: 976..989,
        },
        "TemplateExport": GrammarRule {
            name: Identifier("TemplateExport", 1123..1137),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_L", 1146..1156),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("exports", 1157..1164),
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("ExportItem", 1165..1175),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_R", 1177..1187),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 1117..1189,
        },
        "ExportItem": GrammarRule {
            name: Identifier("ExportItem", 1196..1206),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_EXPORT", 1215..1224),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("name", 1225..1229),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 1230..1240),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("KW_TO", 1246..1251),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("language", 1252..1260),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("Identifier", 1261..1271),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 1,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("KW_BY", 1279..1284),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: IGNORED,
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("KW_CLASS", 1285..1293),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("class", 1294..1299),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("NamepathFree", 1301..1313),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 1,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("KW_BY", 1321..1326),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: IGNORED,
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("KW_TRAIT", 1327..1335),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("trait", 1336..1341),
                                                    remark: false,
                                                    body: UnaryExpression {
                                                        base: Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: RuleReference {
                                                                name: Identifier("NamepathFree", 1342..1354),
                                                                boxed: false,
                                                                inline: false,
                                                            },
                                                        },
                                                        operators: [
                                                            RepeatsBetween {
                                                                min: 0,
                                                                max: 1,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 1,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 1190..1359,
        },
        "KW_EXPORT": GrammarRule {
            name: Identifier("KW_EXPORT", 1388..1397),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "export",
                        insensitive: false,
                        range: 1400..1406,
                    },
                },
            },
            range: 1388..1407,
        },
        "KW_CLASS": GrammarRule {
            name: Identifier("KW_CLASS", 1412..1420),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "class",
                        insensitive: false,
                        range: 1423..1428,
                    },
                },
            },
            range: 1412..1429,
        },
        "KW_TRAIT": GrammarRule {
            name: Identifier("KW_TRAIT", 1434..1442),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "trait",
                        insensitive: false,
                        range: 1445..1450,
                    },
                },
            },
            range: 1434..1451,
        },
        "KW_TO": GrammarRule {
            name: Identifier("KW_TO", 1456..1461),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "to",
                        insensitive: false,
                        range: 1464..1466,
                    },
                },
            },
            range: 1456..1467,
        },
        "KW_BY": GrammarRule {
            name: Identifier("KW_BY", 1472..1477),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "by",
                        insensitive: false,
                        range: 1480..1482,
                    },
                },
            },
            range: 1472..1483,
        },
        "TemplateIf": GrammarRule {
            name: Identifier("TemplateIf", 1620..1630),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("IfBegin", 1637..1644),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("IfBegin", 1637..1644),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("IfElseIf", 1645..1653),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("IfElseIf", 1645..1653),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("IfElse", 1655..1661),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("IfElse", 1655..1661),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 1,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("IfEnd", 1663..1668),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("IfEnd", 1663..1668),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 1607..1670,
        },
        "IfBegin": GrammarRule {
            name: Identifier("IfBegin", 1684..1691),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("TEMPLATE_L", 1698..1708),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_L", 1698..1708),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_IF", 1712..1717),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("Expression", 1720..1730),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Expression", 1720..1730),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("TEMPLATE_R", 1733..1743),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_R", 1733..1743),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("Element", 1744..1751),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Element", 1744..1751),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 1671..1754,
        },
        "IfElse": GrammarRule {
            name: Identifier("IfElse", 1768..1774),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("TEMPLATE_L", 1781..1791),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_L", 1781..1791),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_ELSE", 1795..1802),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("TEMPLATE_R", 1805..1815),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_R", 1805..1815),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("Element", 1816..1823),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Element", 1816..1823),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 1755..1826,
        },
        "IfElseIf": GrammarRule {
            name: Identifier("IfElseIf", 1840..1848),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("TEMPLATE_L", 1855..1865),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_L", 1855..1865),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_ELSE", 1869..1876),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_IF", 1880..1885),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("Expression", 1888..1898),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Expression", 1888..1898),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("TEMPLATE_R", 1901..1911),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_R", 1901..1911),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("Element", 1912..1919),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Element", 1912..1919),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 1827..1922,
        },
        "IfEnd": GrammarRule {
            name: Identifier("IfEnd", 1936..1941),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("TEMPLATE_L", 1948..1958),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_L", 1948..1958),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_END", 1962..1968),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("KW_IF", 1972..1977),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 1,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("TEMPLATE_R", 1981..1991),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_R", 1981..1991),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 1923..1993,
        },
        "KW_IF": GrammarRule {
            name: Identifier("KW_IF", 2022..2027),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "if",
                        insensitive: false,
                        range: 2030..2032,
                    },
                },
            },
            range: 2022..2033,
        },
        "KW_ELSE": GrammarRule {
            name: Identifier("KW_ELSE", 2038..2045),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "else",
                        insensitive: false,
                        range: 2048..2052,
                    },
                },
            },
            range: 2038..2053,
        },
        "TemplateFor": GrammarRule {
            name: Identifier("TemplateFor", 2190..2201),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("ForBegin", 2208..2216),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("ForBegin", 2208..2216),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("ForElse", 2217..2224),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("ForElse", 2217..2224),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 1,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("ForEnd", 2226..2232),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("ForEnd", 2226..2232),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 2177..2234,
        },
        "ForBegin": GrammarRule {
            name: Identifier("ForBegin", 2248..2256),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("TEMPLATE_L", 2263..2273),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_L", 2263..2273),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_FOR", 2277..2283),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("Expression", 2286..2296),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Expression", 2286..2296),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("TEMPLATE_R", 2299..2309),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_R", 2299..2309),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("Element", 2310..2317),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Element", 2310..2317),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 2235..2320,
        },
        "ForElse": GrammarRule {
            name: Identifier("ForElse", 2334..2341),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("TEMPLATE_L", 2348..2358),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_L", 2348..2358),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_ELSE", 2362..2369),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("TEMPLATE_R", 2372..2382),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_R", 2372..2382),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("Element", 2383..2390),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Element", 2383..2390),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 2321..2393,
        },
        "ForEnd": GrammarRule {
            name: Identifier("ForEnd", 2407..2413),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("TEMPLATE_L", 2420..2430),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_L", 2420..2430),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_END", 2434..2440),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("KW_FOR", 2444..2450),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 1,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("TEMPLATE_R", 2454..2464),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_R", 2454..2464),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 2394..2466,
        },
        "KW_FOR": GrammarRule {
            name: Identifier("KW_FOR", 2495..2501),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "for",
                        insensitive: false,
                        range: 2504..2507,
                    },
                },
            },
            range: 2495..2508,
        },
        "Expression": GrammarRule {
            name: Identifier("Expression", 2638..2648),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("Term", 2655..2659),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Term", 2655..2659),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("ExpressionRest", 2660..2674),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("ExpressionRest", 2660..2674),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 2632..2677,
        },
        "ExpressionRest": GrammarRule {
            name: Identifier("ExpressionRest", 2684..2698),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("Infix", 2705..2710),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Infix", 2705..2710),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("Term", 2711..2715),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Term", 2711..2715),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 2678..2717,
        },
        "Infix": GrammarRule {
            name: Identifier("Infix", 2724..2729),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Add", 2743..2746),
                        ),
                        branch: Expression {
                            tag: Identifier("Add", 2743..2746),
                            remark: false,
                            body: YggdrasilText {
                                text: "+",
                                insensitive: false,
                                range: 2739..2740,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Mul", 2758..2761),
                        ),
                        branch: Expression {
                            tag: Identifier("Mul", 2758..2761),
                            remark: false,
                            body: YggdrasilText {
                                text: "-",
                                insensitive: false,
                                range: 2754..2755,
                            },
                        },
                    },
                ],
            },
            range: 2718..2763,
        },
        "Term": GrammarRule {
            name: Identifier("Term", 2770..2774),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("Prefix", 2781..2787),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("Prefix", 2781..2787),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("Atomic", 2789..2795),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Atomic", 2789..2795),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("Suffix", 2796..2802),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("Suffix", 2796..2802),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 2764..2805,
        },
        "Prefix": GrammarRule {
            name: Identifier("Prefix", 2812..2818),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Not", 2832..2835),
                        ),
                        branch: Expression {
                            tag: Identifier("Not", 2832..2835),
                            remark: false,
                            body: YggdrasilText {
                                text: "!",
                                insensitive: false,
                                range: 2828..2829,
                            },
                        },
                    },
                ],
            },
            range: 2806..2837,
        },
        "Suffix": GrammarRule {
            name: Identifier("Suffix", 2844..2850),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Null", 2864..2868),
                        ),
                        branch: Expression {
                            tag: Identifier("Null", 2864..2868),
                            remark: false,
                            body: YggdrasilText {
                                text: "?",
                                insensitive: false,
                                range: 2860..2861,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DotCall", 2891..2898),
                        ),
                        branch: Expression {
                            tag: Identifier("DotCall", 2891..2898),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: ".",
                                            insensitive: false,
                                            range: 2876..2877,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: IGNORED,
                                    },
                                    Expression {
                                        tag: Identifier("Identifier", 2879..2889),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Identifier", 2879..2889),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                ],
            },
            range: 2838..2900,
        },
        "Atomic": GrammarRule {
            name: Identifier("Atomic", 3028..3034),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Boolean", 3107..3114),
                        ),
                        branch: Expression {
                            tag: Identifier("Boolean", 3107..3114),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Boolean", 3081..3088),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Identifier", 3147..3157),
                        ),
                        branch: Expression {
                            tag: Identifier("Identifier", 3147..3157),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Identifier", 3121..3131),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Number", 3190..3196),
                        ),
                        branch: Expression {
                            tag: Identifier("Number", 3190..3196),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Number", 3164..3170),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 3022..3198,
        },
        "String": GrammarRule {
            name: Identifier("String", 3326..3332),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DoubleQuote", 3350..3361),
                        ),
                        branch: Expression {
                            tag: Identifier("DoubleQuote", 3350..3361),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "'",
                                            insensitive: false,
                                            range: 3342..3343,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: IGNORED,
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "'",
                                            insensitive: false,
                                            range: 3346..3347,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("SingleQuote", 3377..3388),
                        ),
                        branch: Expression {
                            tag: Identifier("SingleQuote", 3377..3388),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "\"",
                                            insensitive: false,
                                            range: 3369..3370,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: IGNORED,
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "\"",
                                            insensitive: false,
                                            range: 3373..3374,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                ],
            },
            range: 3320..3390,
        },
        "Number": GrammarRule {
            name: Identifier("Number", 3525..3531),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Dec", 3552..3555),
                        ),
                        branch: Expression {
                            tag: Identifier("Dec", 3552..3555),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Digits", 3540..3546),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Bin", 3574..3577),
                        ),
                        branch: Expression {
                            tag: Identifier("Bin", 3574..3577),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilRegex {
                                            raw: "0b",
                                            span: 3562..3566,
                                        },
                                    },
                                    Expression {
                                        tag: Identifier("BIN", 3567..3570),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("BIN", 3567..3570),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Oct", 3596..3599),
                        ),
                        branch: Expression {
                            tag: Identifier("Oct", 3596..3599),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilRegex {
                                            raw: "0o",
                                            span: 3584..3588,
                                        },
                                    },
                                    Expression {
                                        tag: Identifier("OCT", 3589..3592),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("OCT", 3589..3592),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Hex", 3618..3621),
                        ),
                        branch: Expression {
                            tag: Identifier("Hex", 3618..3621),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilRegex {
                                            raw: "0x",
                                            span: 3606..3610,
                                        },
                                    },
                                    Expression {
                                        tag: Identifier("HEX", 3611..3614),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("HEX", 3611..3614),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                ],
            },
            range: 3512..3623,
        },
        "Digits": GrammarRule {
            name: Identifier("Digits", 3635..3641),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: true,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "(0|[1-9][0-9])(.[0-9]+)?",
                        span: 3648..3674,
                    },
                },
            },
            range: 3624..3676,
        },
        "Unit": GrammarRule {
            name: Identifier("Unit", 3683..3687),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: Identifier("Identifier", 3694..3704),
                    remark: false,
                    body: RuleReference {
                        name: Identifier("Identifier", 3694..3704),
                        boxed: false,
                        inline: false,
                    },
                },
            },
            range: 3677..3706,
        },
        "BIN": GrammarRule {
            name: Identifier("BIN", 3719..3722),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[0-1]+",
                        span: 3724..3732,
                    },
                },
            },
            range: 3719..3732,
        },
        "OCT": GrammarRule {
            name: Identifier("OCT", 3737..3740),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[0-7]+",
                        span: 3742..3750,
                    },
                },
            },
            range: 3737..3750,
        },
        "HEX": GrammarRule {
            name: Identifier("HEX", 3755..3758),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[0-9a-fA-F]+",
                        span: 3760..3774,
                    },
                },
            },
            range: 3755..3774,
        },
        "NamepathFree": GrammarRule {
            name: Identifier("NamepathFree", 3904..3916),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("Identifier", 3935..3945),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 3935..3945),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: ChoiceExpression {
                                                                    branches: [
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: YggdrasilText {
                                                                                text: ".",
                                                                                insensitive: false,
                                                                                range: 3949..3950,
                                                                            },
                                                                        },
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: YggdrasilText {
                                                                                text: "::",
                                                                                insensitive: false,
                                                                                range: 3955..3957,
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: IGNORED,
                                                            },
                                                            Expression {
                                                                tag: Identifier("Identifier", 3960..3970),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("Identifier", 3960..3970),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 3898..3974,
        },
        "Namepath": GrammarRule {
            name: Identifier("Namepath", 3981..3989),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("Identifier", 3996..4006),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 3996..4006),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: YggdrasilText {
                                                                    text: "::",
                                                                    insensitive: false,
                                                                    range: 4009..4011,
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: IGNORED,
                                                            },
                                                            Expression {
                                                                tag: Identifier("Identifier", 4013..4023),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("Identifier", 4013..4023),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 3975..4027,
        },
        "Identifier": GrammarRule {
            name: Identifier("Identifier", 4034..4044),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[_\\p{XID_start}]\\p{XID_continue}*",
                        span: 4051..4086,
                    },
                },
            },
            range: 4028..4088,
        },
        "Boolean": GrammarRule {
            name: Identifier("Boolean", 4095..4102),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("True", 4120..4124),
                        ),
                        branch: Expression {
                            tag: Identifier("True", 4120..4124),
                            remark: false,
                            body: YggdrasilText {
                                text: "true",
                                insensitive: false,
                                range: 4112..4116,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("False", 4140..4145),
                        ),
                        branch: Expression {
                            tag: Identifier("False", 4140..4145),
                            remark: false,
                            body: YggdrasilText {
                                text: "false",
                                insensitive: false,
                                range: 4132..4137,
                            },
                        },
                    },
                ],
            },
            range: 4089..4147,
        },
        "WhiteSpace": GrammarRule {
            name: Identifier("WhiteSpace", 4282..4292),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: true,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "\\p{White_Space}+",
                        span: 4299..4317,
                    },
                },
            },
            range: 4269..4319,
        },
    },
    token_sets: {},
    functions: {},
}