#![allow(unused_imports)]

use core::fmt::{Display, Formatter, Write};

use {% dejavu.namespace %}::{{% dejavu.imports.join(", ") %}};

impl{% target.generic %} Display for {% target.path %} {
    #[inline]
    fn fmt(&self, f: &mut Formatter<'_>) -> core::fmt::Result {
        {% dejavu.namespace %}Template::render(self, f).map_err(|_| core::fmt::Error {})
    }
}

impl{% target.generic %} Template for {% target.path %}{% target.generic %} {
    const SIZE_HINT: usize = {% target.size_hint %};
    const MIME_TYPE: &'static str = "{% target.mime_type %}";
    const EXTENSION: &'static str = "{% target.extension %}";

    fn render(&self, writer: &mut (impl Write + ?Sized)) -> Result<()> {
        writer.write_str("<h1>Users</h1>\n<ul>\n    ")?;
        {
            let mut did_loop = false;
            let iter = (&self.users).into_iter();
            if !did_loop {}
        }
        writer.write_str("\n</ul>")?;
        Ok(())
    }
}
