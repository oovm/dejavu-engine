@export
SahaParser = { SahaStatements+ } $;

SahaStatements =
	@:SlotNode
;

SlotNode = SLOT_L SLOT_R;

@no_skip_ws
SlotL = "{%" trim:TrimMode;

@no_skip_ws
SlotR = trim:TrimMode "%}";

EndNode = left:SlotL EndWord right:SlotR;

@no_skip_ws
EndWord = 'end' | "end-if" | "end-for";

TrimMode = '_' | '-' | '=';

@string
@position
@no_skip_ws
IdentifierNode = (XID_START | '_') {XID_CONTINUE};

@string
@position
SpecialNode = 'null' | 'default' | 'true' | 'false';

@char
@check(unicode_ident::is_xid_start)
XID_START = char;

@char
@check(unicode_ident::is_xid_continue)
XID_CONTINUE = char;

@no_skip_ws
CommentL = "{#" trim:TrimMode;

@no_skip_ws
CommentR = trim:TrimMode "#}";


@string
@no_skip_ws
Ident = {'a'..'z' | 'A'..'Z' | '_' | '0'..'9'};